print("hello")
print("hello")
setwd("Documents/Fall 2016/Stats 159/projects/proj3/code/scripts/")
training_short_data <- read.csv("../../data/training_short_data.csv")
#for principal component regression
set.seed (1000)
pcr_short_model <- pcr(UNEMP_RATE~., data = training_short_data, scale = TRUE, validation = "CV")
require(pls)
pcr_short_model <- pcr(UNEMP_RATE~., data = training_short_data, scale = TRUE, validation = "CV")
ncomp_short_pcr <- which(pcr_short_model$validation$PRESS == min(pcr_short_model$validation$PRESS)) #selects components with best model
pcr_short_coef <- coef(pcr_model)
pcr_short_coef <- coef(pcr_short_model)
save(pcr_short_coef, pcr_short_model, file = "../../data/pcr_short_model.RData")
predplot(pcr_short_model)
coefplot(pcr_short_model)
predplot(pcr_short_model)
coefplot(pcr_short_model)
#Adding Histograms to Images
png('../../images/CV_Errors_pcr.png')
validationplot(pcr_short_model, val.type = "MSEP")
dev.off()
#Test Data
test_short_data <- read.csv("../../data/test_short_data.csv")
#need to figure out how many components, look at validation plot
pcr_short_pred <- predict(pcr_short_model, test_short_data)
response_short <- test_short_data["UNEMP_RATE"]
response_short <- as.matrix(response_short)
#error, test accuracy
source("../functions/mse_function.R")
MSE_short_pcr = MSE(pcr_short_pred, response_short)
prc_short_pred
pcr_short_pred
response_short
pcr_short_pred
response_short
pcr_short_pred
pcr_short_coef
pcr_short_model
pcr_pred <- predict(pcr_model, test_data, ncomp = 90)
test_short_data <- test_short_data[,-1]
#need to figure out how many components, look at validation plot
pcr_short_pred <- predict(pcr_short_model, test_short_data)
test_short_data <- test_short_data[,-1]
#for principal component regression
set.seed (1000)
pcr_short_model <- pcr(UNEMP_RATE~., data = training_short_data, scale = TRUE, validation = "CV")
ncomp_short_pcr <- which(pcr_short_model$validation$PRESS == min(pcr_short_model$validation$PRESS)) #selects components with best model
pcr_short_coef <- coef(pcr_short_model)
save(pcr_short_coef, pcr_short_model, file = "../../data/pcr_short_model.RData")
predplot(pcr_short_model)
coefplot(pcr_short_model)
#Adding Histograms to Images
png('../../images/CV_Errors_pcr.png')
validationplot(pcr_short_model, val.type = "MSEP")
dev.off()
#Test Data
test_short_data <- read.csv("../../data/test_short_data.csv")
test_short_data <- test_short_data[,-1]
#need to figure out how many components, look at validation plot
pcr_short_pred <- predict(pcr_short_model, test_short_data)
pcr_short_coef
colnames(test_short_data)
colnames(training_short_data)
training_short_data <- read.csv("../../data/training_short_data.csv")
training_short_data <- training_short_data[,-1]
#for principal component regression
set.seed (1000)
pcr_short_model <- pcr(UNEMP_RATE~., data = training_short_data, scale = TRUE, validation = "CV")
ncomp_short_pcr <- which(pcr_short_model$validation$PRESS == min(pcr_short_model$validation$PRESS)) #selects components with best model
pcr_short_coef <- coef(pcr_short_model)
save(pcr_short_coef, pcr_short_model, file = "../../data/pcr_short_model.RData")
predplot(pcr_short_model)
coefplot(pcr_short_model)
#Adding Histograms to Images
png('../../images/CV_Errors_pcr.png')
validationplot(pcr_short_model, val.type = "MSEP")
dev.off()
#Test Data
test_short_data <- read.csv("../../data/test_short_data.csv")
test_short_data <- test_short_data[,-1]
#need to figure out how many components, look at validation plot
pcr_short_pred <- predict(pcr_short_model, test_short_data)
response_short <- test_short_data["UNEMP_RATE"]
response_short <- as.matrix(response_short)
#error, test accuracy
source("../functions/mse_function.R")
MSE_short_pcr = MSE(pcr_short_pred, response_short)
pcr_short_pred
response_short
pcr_short_model
test_short_data
nrom(test_short_data)
nrow(test_short_data)
nrow(pcr_short_pred)
nrow(response_short)
ncol(pcr_short_pred)
ncol(response_short)
MSE_short_pcr = MSE(pcr_short_pred, response_short)
len(response_short)
length((response_short))
length(pcr_short_coef)
length(pcr_short_pred)
pcr_short_pred <- predict(pcr_short_model, test_short_data, ncomp = length(pcr_short_coef))
length(pcr_short_pred)
pcr_short_pred <- predict(pcr_short_model, test_short_data, ncomp = length(pcr_short_coef))
response_short <- test_short_data["UNEMP_RATE"]
response_short <- as.matrix(response_short)
#error, test accuracy
source("../functions/mse_function.R")
MSE_short_pcr = MSE(pcr_short_pred, response_short)
MSE_short_pcr
MSE_short_pcr = MSE(pcr_short_pred, response_short)
save(MSE_short_pcr, file = "../../data/MSE_short_pcr.RData")
#saving  the important stuff
sink(file = "../../data/pcr_short_model.txt")
print("The PCR model")
pcr_short_coef
print("applied predictors")
pcr_short_pred
print("The PCR MSE")
MSE_short_pcr
sink()
shiny::runApp('~/Documents/Fall 2016/Stats 159/projects/proj3/shiny')
